security:

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]

    encoders:
        Vadim\BlogBundle\Entity\User: bcrypt

    providers:
        blog_users:
            entity: { class: Vadim\BlogBundle\Entity\User, property: email }

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            form_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

#        api:
#            pattern:   ^/api/
#            stateless: true
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: ~
            guard:
                authenticators:
                    - vadim_blog.security.login_form_authenticator

            logout:
                path: /logout
            switch_user: ~

    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api-doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/,       roles: IS_AUTHENTICATED_FULLY }
